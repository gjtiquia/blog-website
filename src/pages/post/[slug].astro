---
import type { InferGetStaticParamsType } from "astro";
import { PortableText } from "astro-portabletext";
import {
    formatDate,
    getAuthor,
    getPost,
    getPosts,
    getPostTags,
} from "@src/sanity";
import BaseLayout from "@src/layouts/BaseLayout.astro";
import {
    ImageComponent,
    CenterProseContainer,
    CodeComponent,
} from "@src/components";

export async function getStaticPaths() {
    const posts = await getPosts();

    return posts.map((post) => ({
        params: {
            slug: post.slug.current,
        },
    }));
}

type Params = InferGetStaticParamsType<typeof getStaticPaths>;
const { slug } = Astro.params as Params;

const post = await getPost(slug);
const author = await getAuthor(post);
const tags = await getPostTags(post);

// console.log(post);
---

<BaseLayout title={post.title ? post.title : "Untitled"} titlePrefix={""}>
    <CenterProseContainer>
        <article
            class="prose dark:prose-invert prose-h1:mb-2 prose-hr:mt-2 prose-hr:mb-8 prose-img:rounded-xl prose-img:mx-auto prose-code:before:content-none prose-code:after:content-none"
        >
            <h1>{post.title}</h1>
            <div
                class="not-prose mb-2 flex flex-row justify-between text-gray-500 dark:text-gray-400"
            >
                <p>{"By " + author.name}</p>
                <p>
                    {formatDate(post.publishedAt)}
                </p>
            </div>
            <div class="not-prose flex gap-2">
                {
                    tags.map((tag) => (
                        <a
                            href={`/tag/${tag.slug.current}`}
                            class="bg-slate-400 hover:bg-slate-500 active:bg-slate-600 text-slate-50 dark:bg-gray-500 dark:text-gray-200 dark:hover:bg-gray-400 dark:active:bg-gray-300 px-3 py-1 text-sm rounded-full"
                        >
                            {tag.name}
                        </a>
                    ))
                }
            </div>
            <!-- <hr /> -->
            <PortableText
                value={post.body}
                components={{
                    type: {
                        image: ImageComponent,
                        code: CodeComponent,
                    },
                }}
            />
        </article>
    </CenterProseContainer>
</BaseLayout>
